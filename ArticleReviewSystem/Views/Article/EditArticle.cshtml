@model ArticleReviewSystem.ViewModels.EditArticleViewModel
@using ArticleReviewSystem.ViewModels
<link href="~/Content/AddArticleStyling.css" rel="stylesheet" />

<html>
<body>

    <div class="main">
        <div class="container tim-container" style="max-width:800px; padding-top:100px">

            @using (Html.BeginForm("EditArticle", "Article", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.CoAuthorsCounter)
                @Html.HiddenFor(model => model.MaxCoAuthors)
                @Html.HiddenFor(model => model.ArticleId)
                @Html.HiddenFor(model => model.ArticleName)
                @Html.HiddenFor(model => model.onlyReupload)

                <div class="form-horizontal">
                    <h4>Article edit</h4>
                    <hr />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (Model.onlyReupload)
                            {
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            <div class="input-group article-preview" style="height:100%">
                                <input type="text" id="fileName" class="form-control article-preview-filename" disabled="disabled" style="height:100%">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default article-preview-clear" style="display:none;">
                                        <span class="glyphicon glyphicon-remove"></span> Clear
                                    </button>
                                    <div class="btn btn-default article-preview-input">
                                        <span class="glyphicon glyphicon-folder-open"></span>
                                        <span class="article-preview-input-title">Browse</span>
                                        <input type="file" accept=".pdf" name="File" />
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="coAutohorsBox">
                        <div class="col-md-12 form-group">
                            @Html.LabelFor(model => model.CoAuthors, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if(!Model.onlyReupload)
                            {
                                <a href="#" id="coAuthPlus"><span class="more-less glyphicon glyphicon-plus-sign" style="vertical-align:middle;"></span></a>
                                <a href="#" id="coAuthMinus"><span class="more-less glyphicon glyphicon-minus-sign" style="vertical-align:middle;"></span></a>
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.CoAuthors, "", new { @class = "text-danger" })

                        @for (int i = 0; i < Model.CoAuthors.Count; i++)
                        {
                            <div class="panel panel-default" id='CoAuthorPanel@(i)'>
                                <h5>CoAuthor #@(i + 1)</h5>
                                <div class="form-group">
                                    @Html.LabelFor(item => item.CoAuthors[i].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @if (Model.onlyReupload)
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Name, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Name, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        }
                                        @Html.ValidationMessageFor(item => item.CoAuthors[i].Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(item => item.CoAuthors[i].Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @if (Model.onlyReupload)
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Surname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Surname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        }
                                        @Html.ValidationMessageFor(item => item.CoAuthors[i].Surname, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(item => item.CoAuthors[i].Affiliation, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @if (Model.onlyReupload)
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Affiliation, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(item => item.CoAuthors[i].Affiliation, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        }
                                        @Html.ValidationMessageFor(item => item.CoAuthors[i].Affiliation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>



                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-block btn-success btn-fill" />
                    </div>
                </div>
            }

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            <div>
                <a href="/Article/DisplayArticles" )">Back to list</a>
            </div>
        </div>
    </div>

</body>

</html>
<script src="~/Scripts/AddArticleFileBrowseScript.js"></script>
<script src="~/Scripts/DisplayArticleNameInFileBrowser.js"></script>
<script src="~/Scripts/EditArticleCoAuthorsScript.js"></script>