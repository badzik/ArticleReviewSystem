@model ArticleReviewSystem.ViewModels.DisplayArticleViewModel
@using System.Text.RegularExpressions
@using ArticleReviewSystem.Enums.ReviewEnums
@using ArticleReviewSystem.Helpers

<!doctype html>

<link href="~/Content/AddArticleStyling.css" rel="stylesheet" />

<html>

<body>
    <div class="main">
        <div class="container tim-container" id="test" style="max-width:800px; padding-top:100px">
            <div>
                <h1 class="text-center">@Html.DisplayFor(model => model.Title)</h1>
                <h3 id="test">Details</h3>
                <dl class="dl-horizontal">

                    <dt>
                        @Html.DisplayNameFor(model => model.Status)
                    </dt>
                    @{ string enum_ = Model.Status.ToString();
                        string status = Regex.Replace(enum_, "([a-z])_?([A-Z])", "$1 $2").ToLower();
                    }
                    <dd>
                        @Html.DisplayName(status)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ArticleName)
                    </dt>
                    <dd>
                        @Html.ActionLink(Model.ArticleName, "DisplayPDF", "Article", new { articleId = ViewData["article_id"] }, null)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Date)
                    </dt>

                    <dd>
                        @Model.Date.ToString("dd/MM/yyyy")
                    </dd>

                </dl>
            </div>

            <h3>Co-authors</h3>
            <div class="form-horizontal">
                @if (Model.CoAuthors.Count > 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Name")
                                </th>
                                <th>
                                    @Html.DisplayName("Surname")
                                </th>
                                <th>
                                    @Html.DisplayName("Affiliation")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.CoAuthors)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Surname)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Affiliation)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <h3 class="text-center">None co-authors for this article.</h3>
                }
            </div>
            @if (Model.Reviews.Count > 0)
            {
                <h3>Reviews</h3>
                <div class="form-horizontal">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Name")
                                </th>
                                <th>
                                    @Html.DisplayName("Surname")
                                </th>
                                <th>
                                    @Html.DisplayName("Final Recommendation")
                                </th>
                                <th>
                                    @Html.DisplayName("Review")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Reviews)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Reviewer.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Reviewer.Surname)
                                    </td>
                                    <td>
                                        @EnumExtensions.DisplayName((Enum)Enum.Parse(typeof(FinalRecommendation), item.FinalRecommendation))
                                    </td>
                                    <td>
                                        <a class="btn btn-info btn-fill" target="_blank" href="@Url.Action("ShowReview", "Article", new { reviewId = item.ReviewId })">Show Review</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            <div class="space-30"></div>

            <div class="form-horizontal">
                @if (Model.Status == ArticleReviewSystem.Enums.ArticleStatus.ChangesWithNewReview || Model.Status == ArticleReviewSystem.Enums.ArticleStatus.MinorChangesWithoutNewReview)
                {
                    <input type="button" class="btn btn-block btn-success btn-fill" value="Reupload article" onclick="location.href='@Url.Action("EditArticle", "Article", new { articleId = ViewData["article_id"] })'" />
                }
                @{ if (Model.Status == ArticleReviewSystem.Enums.ArticleStatus.WaitingToAssignReviewers)
                    {
                        <input type="button" class="btn btn-block btn-success btn-fill" value="Edit" onclick="location.href='@Url.Action("EditArticle", "Article", new { articleId = ViewData["article_id"] })'" />
                        <input type="button" data-toggle="modal" value="Delete" data-id=@ViewData["article_id"] class="open-deleteDialog btn btn-block btn-danger btn-fill" data-target="#deleteModal" />
                    }
                }
                <input type="button" class="btn btn-block btn-info btn-fill" value="Back" onclick="location.href='@Url.Action("DisplayArticles", "Article")'" />
            </div>

            <div class="space"></div>

        </div>
    </div>

    <div class="modal fade" id="deleteModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Article delete</h4>
                </div>
                <div class="modal-body">
                    <p>Do you really want to delete this article ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <a href="#" class="btn btn-danger" id="deleteLink">Delete article</a>
                </div>
            </div>
        </div>
    </div>
</body>

</html>
<script src="~/Scripts/DisplayArticleScript.js"></script>