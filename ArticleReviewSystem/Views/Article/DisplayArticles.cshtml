@model ArticleReviewSystem.ViewModels.DisplayArticlesViewModel
@using System.Text.RegularExpressions

<!doctype html>

<link href="~/Content/AddArticleStyling.css" rel="stylesheet" />

<html>

<body>

    <div class="main">
        <div class="container tim-container" style="padding-top:100px">
            <h1 class="text-center">My articles</h1>
            <div class="col-md-12 row">
                <div class="col-md-4 col-md-push-4">@Html.TextBoxFor(m => m.SearchPhrase, new { @class = "form-control", placeholder = "Search", Type = "Text" })</div>
                <div class="input-group-btn col-md-3 col-md-push-4">
                    <button class="btn btn-info btn-fill submitButton" type="submit">Search</button>
                </div>
            </div>
            <div class="col-md-12 row">
                <div class="col-md-2">
                    <label>Results per page</label>
                    @Html.DropDownListFor(m => m.ResultsForPage, new SelectList(new List<int>() { 10, 20, 30, 40 }),
            new { @class = "form-control" })
                </div>
                <div class="form-group col-md-3  col-md-offset-7">
                    <label for="SortBy">Sort by:</label>
                    @Html.DropDownListFor(m => m.SortBy, new List<SelectListItem> { new SelectListItem { Text = "Title", Value = ArticleReviewSystem.Enums.ArticleSortBy.Title.ToString() },
                       new SelectListItem { Text = "Status", Value = ArticleReviewSystem.Enums.ArticleSortBy.Status.ToString() },new SelectListItem { Text = "Article name", Value = ArticleReviewSystem.Enums.ArticleSortBy.ArticleName.ToString() } }, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-horizontal">
                <div class="Results">
                    @if (Model.Articles.Count() > 0)
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        Title
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Article name
                                    </th>
                                    <th>
                                        @Html.DisplayName("Options")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Articles)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @{ string enum_ = item.Status.ToString();
                                                string status = Regex.Replace(enum_, "([a-z])_?([A-Z])", "$1 $2").ToLower();
                                            }
                                            @Html.DisplayName(status)
                                        </td>
                                        <td>
                                            @{
                                                ViewData["article_id"] = item.ArticleId;
                                            }
                                            @Html.ActionLink(item.ArticleName, "DisplayPDF", "Article", new { articleId = ViewData["article_id"] }, null)
                                        </td>
                                        <td>
                                            <input type="button" class="btn btn-block btn-info btn-fill" value="Details" onclick="location.href='@Url.Action("DisplayArticleDetails", "Article", new { articleId = item.ArticleId })'" />
                                        </td>

                                    </tr>
                                                }
                            </tbody>
                        </table>
                                                }
                                                else
                                                {
                                                    <h3 class="text-center">No articles has been found</h3>
                                                }
                </div>
                <div>
                    <div class="col-md-4 col-md-push-4 text-center row" id="pageControl">
                        <a href="#" id="backMaxArrow" class="myArrow"><span class="fa fa-angle-double-left"></span></a>
                        <a href="#" id="backArrow" class="myArrow"><span class="fa fa-angle-left"></span></a>
                        <span class="currentPage">@Html.DisplayFor(m => m.CurrentPage)</span> from <span class="numberOfPages">@Html.DisplayFor(m => m.NumberOfPages)</span>
                        <a href="#" id="nextArrow" class="myArrow"><span class="fa fa-angle-right"></span></a>
                        <a href="#" id="nextMaxArrow" class="myArrow"><span class="fa fa-angle-double-right"></span></a>
                    </div>
                </div>
            </div>

            <div class="space"></div>
            <div class="space"></div>

        </div>
    </div>

</body>

</html>
<script src="~/Scripts/DisplayArticlesSearchScript.js"></script>