@model ArticleReviewSystem.Models.Review
@using ArticleReviewSystem.Enums.ReviewEnums
@using ArticleReviewSystem.Extensions
<style>
    body {
        padding: 20px;
        margin: 0 auto;
        zoom: 180%;
    }


    table a:link {
        color: #666;
        font-weight: bold;
        text-decoration: none;
    }

    table a:active,
    table {
        font-family: Arial, Helvetica, sans-serif;
        color: #666;
        font-size: 12px;
        text-shadow: 2px 2px 0px #fff;
        background: #eaebec;
        margin-left:40px;
        margin: 10px;
        border: #ccc 2px solid;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
        border-radius: 3px;
        -moz-box-shadow: 0 2px 2px #d1d1d1;
        -webkit-box-shadow: 0 2px 2px #d1d1d1;
        box-shadow: 0 2px 2px #d1d1d1;
    }

        table th {
            padding: 22px 25px 22px 25px;
            border-top: 2px solid #fafafa;
            border-bottom: 2px solid #e0e0e0;
            background: #ededed;
            background: -webkit-gradient(linear, left top, left bottom, from(#ededed), to(#ebebeb));
            background: -moz-linear-gradient(top, #ededed, #ebebeb);
        }

            table th:first-child {
                text-align: left;
                padding-left: 20px;
            }

        table tr:first-child th:first-child {
            -moz-border-radius-topleft: 3px;
            -webkit-border-top-left-radius: 3px;
            border-top-left-radius: 3px;
        }

        table tr:first-child th:last-child {
            -moz-border-radius-topright: 3px;
            -webkit-border-top-right-radius: 3px;
            border-top-right-radius: 3px;
        }

        table tr {
            text-align: center;
            padding-left: 20px;
        }

        table td:first-child {
            text-align: left;
            padding-left: 20px;
            border-left: 0;
        }

        table td {
            padding: 18px;
            border-top: 2px solid #ffffff;
            border-bottom: 2px solid #e0e0e0;
            border-left: 2px solid #e0e0e0;
            background: #fafafa;
            background: -webkit-gradient(linear, left top, left bottom, from(#fbfbfb), to(#fafafa));
            background: -moz-linear-gradient(top, #fbfbfb, #fafafa);
        }

        table tr.even td {
            background: #f6f6f6;
            background: -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#f6f6f6));
            background: -moz-linear-gradient(top, #f8f8f8, #f6f6f6);
        }

        table tr:last-child td {
            border-bottom: 0;
        }

            table tr:last-child td:first-child {
                -moz-border-radius-bottomleft: 3px;
                -webkit-border-bottom-left-radius: 3px;
                border-bottom-left-radius: 3px;
            }

            table tr:last-child td:last-child {
                -moz-border-radius-bottomright: 3px;
                -webkit-border-bottom-right-radius: 3px;
                border-bottom-right-radius: 3px;
            }

    .tableDivLeft {
        float: left;
        margin-right: 30px;
    }

    .tableDivRight {
        float: left;
        margin-right: 30px;
    }

    .mainTable {
        margin: auto;
        border: 3px solid #73AD21;
    }

    #customers {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 2px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #ddd;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }
</style>
<html>
<body>
    <h1>REFERENCE REPORT FORM</h1>
    <h2>1. ABOUT REVIEWER</h2>
    <table cellspacing='0' id="customers">
        <tbody>
            <tr>
                <td>Name and surname:</td>
                <td>@Model.Reviewer.Name @Model.Reviewer.Surname</td>
            </tr>
            <tr class="even">
                <td>Place of work:</td>
                <td>@Model.Reviewer.Affiliation</td>
            </tr>
            <tr>
                <td>Degree:</td>
                <td>@Model.Reviewer.Degree</td>
            </tr>
            <tr>
                <td>E-mail:</td>
                <td>@Model.Reviewer.Email</td>
            </tr>
            <tr>
                <td>Additional information:</td>
                <td>@Model.Reviewer.AdditionalInfo</td>
            </tr>
        </tbody>
    </table>

    <h2>2. OVERVIEW</h2>
    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Scope</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Scope)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Scope?;
                if (Model.Scope == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Illustrations</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Illustrations)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Illustrations?;
                if (Model.Illustrations == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Content</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Content)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Content?;
                if (Model.Content == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>
   
    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Tables</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Tables)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Tables?;
                if (Model.Tables == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Conclusion drawn</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(ConclusionDrawn)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as ConclusionDrawn?;
                if (Model.ConclusionDraw == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Abbereviations formulae units</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(AbbereviationsFormulaeUnits)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as AbbereviationsFormulaeUnits?;
                if (Model.AbbreviationsFormulaeUnits == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Literature References</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(LiteratureReferences)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as LiteratureReferences?;
                if (Model.LiteratureReferences == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Presentation</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Presentation)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Presentation?;
                if (Model.Presentation == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>

            }
        </table>
    </div>

    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Overall evaluation</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(OverallEvaluation)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as OverallEvaluation?;
                if (Model.OverallEvaluation == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>
            }
        </table>
    </div>

    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Language</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Language)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Language?;
                if (Model.Language == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>
            }
        </table>
    </div>

    <div class="tableDivLeft" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>FinalRecommendation</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(FinalRecommendation)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as FinalRecommendation?;
                if (Model.FinalRecommendation == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>
            }
        </table>
    </div>

    <div class="tableDivRight" id="tableDiv">
        <table cellspacing='0'>
            <thead>
                <tr>
                    <th></th>
                    <th>Abstract</th>
                </tr>
            </thead>
            @foreach (var value in Enum.GetValues(typeof(Abstract)))
            {
                string radioChecked = String.Empty;
                var enumValue = value as Abstract?;
                if (Model.Abstract == enumValue.ToString())
                {
                    radioChecked = "X";
                }
                <tr>
                    <td>@radioChecked</td>
                    <td>@enumValue.GetDisplayName()</td>
                </tr>
            }
        </table>
    </div>
    <div class="tableDivRight" id="tableDiv"><h4>Details comments</h4>
@Model.DetailComments</div>

</body>
</html>